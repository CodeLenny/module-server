// Generated by CoffeeScript 1.10.0
var Deferred, TestRun, bodyParser, it;

Deferred = require("./Deferred");

bodyParser = require("body-parser");

it = require("mocha").it;


/*
Manages a single `it` block as part of a {ModuleTest}.
 */

TestRun = (function() {
  TestRun.prototype.started = null;

  TestRun.prototype.post = null;

  TestRun.prototype.done = null;


  /*
  @param {Test} test attributes to configure this run
   */

  function TestRun(test1) {
    this.test = test1;
    this.started = new Deferred();
    this.post = new Deferred();
    this.done = new Deferred();
    this.it();
  }


  /*
  Adds a route to a server, listening for data to test.
  @param {Connect} a [Connect](http://senchalabs.github.com/connect) server
   */

  TestRun.prototype.route = function(router) {
    return router.post("/testresponse/" + this.test.handler + "/", bodyParser.urlencoded({
      extended: true
    }), (function(_this) {
      return function(req, res) {
        if (req.body.args.length === 1) {
          req.body.args = req.body.args[0];
        }
        _this.post.resolve(req.body.args);
        return res.send("OK");
      };
    })(this));
  };


  /*
  Creates a [Mocha](https://mochajs.org/) `it` block for this test.
   */

  TestRun.prototype.it = function() {
    var done, post, started, test;
    test = this.test, started = this.started, post = this.post, done = this.done;
    return it(test.name, function() {
      this.timeout(test.timeout);
      started.resolve(this);
      return post.then(function(data) {
        if (test.cb) {
          return test.cb(data);
        }
      }).then(function() {
        return done.resolve();
      });
    });
  };

  return TestRun;

})();

module.exports = TestRun;

//# sourceMappingURL=TestRun.js.map
